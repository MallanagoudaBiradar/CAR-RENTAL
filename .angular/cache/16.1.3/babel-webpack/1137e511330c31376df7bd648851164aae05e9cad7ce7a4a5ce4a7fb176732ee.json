{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass BookingService {\n  constructor(http) {\n    this.http = http;\n    this.baseurl = \"http://localhost:3000/booking/\";\n  }\n  addBuy(bookdata) {\n    return this.http.post(this.baseurl, bookdata);\n  }\n  getBuy() {\n    return this.http.get(this.baseurl);\n  }\n  deleteBuy(id) {\n    return this.http.delete(this.baseurl + id);\n  }\n  updateBaby(bookdata, id) {\n    return this.http.put(this.baseurl + id, bookdata);\n  }\n  fetchData(id) {\n    return this.http.get(this.baseurl + id);\n  }\n  searchBuy(name) {\n    return this.http.get(`${this.baseurl}?name=${name}`);\n  }\n}\nBookingService.ɵfac = function BookingService_Factory(t) {\n  return new (t || BookingService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookingService,\n  factory: BookingService.ɵfac,\n  providedIn: 'root'\n});\nexport { BookingService };","map":{"version":3,"names":["BookingService","constructor","http","baseurl","addBuy","bookdata","post","getBuy","get","deleteBuy","id","delete","updateBaby","put","fetchData","searchBuy","name","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\malla\\OneDrive\\Desktop\\HCL Projects'\\Car-Rent-main\\src\\app\\booking.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { bookingmodel } from './booking/bookmodel';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingService {\n\n  baseurl: string = \"http://localhost:3000/booking/\";\n\n  constructor(private http: HttpClient) { }\n\n  addBuy(bookdata: bookingmodel) {\n    return this.http.post<bookingmodel>(this.baseurl, bookdata)\n  }\n\n  getBuy() {\n    return this.http.get<bookingmodel[]>(this.baseurl);\n  }\n\n  deleteBuy(id: number) {\n    return this.http.delete<bookingmodel>(this.baseurl + id);\n  }\n\n  updateBaby(bookdata: bookingmodel, id: number) {\n    return this.http.put<bookingmodel>(this.baseurl + id, bookdata);\n  }\n\n  fetchData(id: number) {\n    return this.http.get<bookingmodel>(this.baseurl + id);\n  }\n\n  searchBuy(name: string) {\n    return this.http.get<any>(`${this.baseurl}?name=${name}`);\n  }\n\n}\n"],"mappings":";;AAIA,MAGaA,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAW,gCAAgC;EAEV;EAExCC,MAAMA,CAACC,QAAsB;IAC3B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAe,IAAI,CAACH,OAAO,EAAEE,QAAQ,CAAC;EAC7D;EAEAE,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAiB,IAAI,CAACL,OAAO,CAAC;EACpD;EAEAM,SAASA,CAACC,EAAU;IAClB,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAe,IAAI,CAACR,OAAO,GAAGO,EAAE,CAAC;EAC1D;EAEAE,UAAUA,CAACP,QAAsB,EAAEK,EAAU;IAC3C,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAe,IAAI,CAACV,OAAO,GAAGO,EAAE,EAAEL,QAAQ,CAAC;EACjE;EAEAS,SAASA,CAACJ,EAAU;IAClB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAe,IAAI,CAACL,OAAO,GAAGO,EAAE,CAAC;EACvD;EAEAK,SAASA,CAACC,IAAY;IACpB,OAAO,IAAI,CAACd,IAAI,CAACM,GAAG,CAAM,GAAG,IAAI,CAACL,OAAO,SAASa,IAAI,EAAE,CAAC;EAC3D;;AA5BWhB,cAAc,C;mBAAdA,cAAc,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdpB,cAAc,C;SAAdA,cAAc;EAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPvB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}